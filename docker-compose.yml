version: "3.8"

services:
    # image project
    app1: &backend
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis
            - db
        networks:
            - laravel
        container_name: app1
        hostname: app1
        deploy:
            resources:
                limits:
                    cpus: "0.3"
                    memory: "230MB"

    app2: 
        <<: *backend 
        hostname: app2
        container_name: app2

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "9999:9999"
        volumes:
            - ./docker/load-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
        networks:
            - laravel
        # entrypoint: [ "sleep", "infinity" ]
        container_name: nginx
        depends_on:
            - app1
            - app2
        # entrypoint: ["sleep", "infinity"]
        deploy:
            resources:
                limits:
                    cpus: "0.17"
                    memory: "10MB"

    # db mysql
    db:
        image: mysql:8.3.0
        platform: linux/x86_64
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: desafio
            MYSQL_ROOT_PASSWORD: desafio
            MYSQL_PASSWORD: desafio
            MYSQL_USER: desafio
        volumes:
            - ./.docker/mysql/dbdata:/var/lib/mysql
        ports:
            - "3388:3306"
        networks:
            - laravel
        container_name: db
        deploy:
            resources:
                limits:
                    cpus: "0.8"
                    memory: "600MB"

    # queue
    queue:
        <<: *backend 
        command: "php artisan queue:work"
        depends_on:
            - redis
            - app1
            - app2
        hostname: queue
        container_name: queue

    # redis
    redis:
        image: redis:latest
        networks:
            - laravel
        hostname: redis
        container_name: redis
        deploy:
            resources:
                limits:
                    cpus: "0.2"
                    memory: "100MB"
networks:
    laravel:
        driver: bridge